{#
AmazonPayments for EC-CUBE3
Copyright(c) 2016 IPLOGIC CO.,LTD. All Rights Reserved.

http://www.iplogic.co.jp/

This program is not free software.
It applies to terms of service.
#}
{% extends 'default_frame.twig' %}

{% block title %}Amazon Payプラグイン{% endblock %}
{% block sub_title %}キー設定確認{% endblock %}

{% block javascript %}
    <script type="text/javascript">
        function getURLParameter(name, source) {
            return decodeURIComponent((new RegExp('[?|&|#]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(source)||[,""])[1].replace(/\+/g,'%20'))||null;
        }

        var accessToken = getURLParameter("access_token", location.search);

        if (typeof accessToken === 'string' && accessToken.match(/^Atza/)) {
            document.cookie = "amazon_Login_accessToken=" + accessToken + ";secure";
        }

        window.onAmazonLoginReady = function() {
            amazon.Login.setClientId("{{ amazonSettings.client_id }}");
            amazon.Login.setUseCookie(true);
        };
    </script>
    <script src="{{ amazonSettings.widget_url }}"></script>
    <script>
    var amazonOrderReferenceId;
    new OffAmazonPayments.Widgets.AddressBook({
        sellerId: "{{ amazonSettings.seller_id}}",
        design: {
            size : {width:"{{ amazonSettings.deliv_widget_width }}px", height:"{{ amazonSettings.deliv_widget_height }}px"}
        },
        onOrderReferenceCreate: function(orderReference) {
            amazonOrderReferenceId = orderReference.getAmazonOrderReferenceId();
            $("#amazonOrderReferenceId").val(amazonOrderReferenceId);
        },
        onAddressSelect: function(orderReference) {
            var postData = new Object;
            postData["mode"] = "select_addr";
            postData["amazonOrderReferenceId"] = amazonOrderReferenceId;
            postData["accessToken"] = accessToken;
            $.ajax({
                type: "POST",
                url: "{{ url('plugin_AmazonPayments_config_widget') }}",
                cache: false,
                dataType: 'json',
                data: postData,
                error: function(XMLHttpRequest, textStatus, errorThrown){
                    alert("通信中にエラーが発生しました。このウィンドウを閉じてやり直して下さい。");
                },
                success: function(result){
                    if (result.error_msg != '') {
                        $('#error_msg').css('color','red');
                        $('#error_msg').html(result.error_msg);
                    } else {
                        $('#error_msg').text('設定値に問題はありません。');
                    }
                }
            });

        },
        onError: function(error) {
            $('#error_msg').css('color','red');
            $('#error_msg').html('「出品者ID」が間違っています。');
        }
    }).bind("addressBookWidgetDiv");

    new OffAmazonPayments.Widgets.Wallet({
        sellerId: "{{ amazonSettings.seller_id}}",
        design: {
            size : {width:"{{ amazonSettings.deliv_widget_width }}px", height:"{{ amazonSettings.deliv_widget_height }}px"}
        },
        onPaymentSelect: function(orderReference) {

        },
        onError: function(error) {
            $('#error_msg').css('color','red');
            $('#error_msg').html('「出品者ID」が間違っています。');
        }
    }).bind("walletWidgetDiv");

    </script>
{% endblock %}

{% block main %}
<h3>テスト結果</h3>
<p style="min-height: 50px;">
    <span id="error_msg">確認中です...</span>
</p>

<h3>Amazonアカウント情報 取得結果</h3>
<div id="addressBookWidgetDiv" style="float:left;"></div>
<div id="walletWidgetDiv"></div>

<div class="btn-area" style="background-color: transparent; margin: 30px 0 0 50px;">
    <ul>
        <li>
            <a class="btn-action" onclick="window.close();">
                <button type="">このウィンドウを閉じる</button>
            </a>
        </li>
    </ul>
</div>

{% endblock %}